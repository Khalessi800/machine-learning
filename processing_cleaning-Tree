import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from imblearn.under_sampling import RandomUnderSampler
from sklearn.preprocessing import LabelEncoder
import scipy.stats as stats
from sklearn.metrics import mean_squared_error,mean_absolute_error,r2_score
from sklearn.ensemble import RandomForestRegressor
from sklearn.preprocessing import OneHotEncoder, StandardScaler
from sklearn.compose import ColumnTransformer
from sklearn.pipeline import Pipeline
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import roc_auc_score, roc_curve, confusion_matrix, ConfusionMatrixDisplay


df_train=pd.read_csv('adult_train.csv')
df_test=pd.read_csv('adult_test.csv')


df_train[df_train.select_dtypes(include='object').columns] = df_train.select_dtypes(include='object').apply(lambda col: col.str.strip())
df_test[df_test.select_dtypes(include='object').columns] = df_test.select_dtypes(include='object').apply(lambda col: col.str.strip())


duplicates = df_train[df_train.duplicated(keep=False)] 
print(f"Nombre total de lignes complètement identiques : {len(duplicates)}")

duplicates = df_train[df_train.duplicated(keep=False)]  # Récupérer toutes les lignes dupliquées
# Compter les doublons exacts
print(f"Nombre total de lignes complètement identiques : {len(duplicates)}")

duplicates = df_test[df_test.duplicated(keep=False)]  # Récupérer toutes les lignes dupliquées
# Compter les doublons exacts
print(f"Nombre total de lignes complètement identiques : {len(duplicates)}")


df_test_cleaned = df_test.drop_duplicates()
print(f"Taille après suppression des doublons : {df_test_cleaned.shape}")

  
